{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA2BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAASC,EAASC,GACnCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,G,GAEpBA,E,IAlCMO,SAASC,cAAc,SAE/BC,iBAAiB,UAAWC,IAC/BA,EAAMC,iBACN,MAAMC,EAASF,EAAMG,OAAOC,SACtBC,EAASC,SAASJ,EAAOG,OAAOE,OAChCC,EAAQF,SAASJ,EAAOZ,MAAMiB,OAC9BE,EAAOH,SAASJ,EAAOO,KAAKF,OAElC,IAAK,IAAIG,EAAI,EAAGA,EAAIL,EAAQK,IAAK,CAG/BtB,EAAcsB,EAFOF,EAAQE,EAAID,GAG9BE,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBzB,EAAY,QAASC,MAAU,IAG7EyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoB3B,EAAY,QAASC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  const values = event.target.elements;\n  const amount = parseInt(values.amount.value);\n  const delay = parseInt(values.delay.value);\n  const step = parseInt(values.step.value);\n\n  for (let i = 0; i < amount; i++) {\n    const promiseDelay = delay + i * step;\n\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position + 1} in ${delay}ms`)\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n})\n\nfunction createPromise(position, delay) {\n  return new Promise(function(resolve, reject) {\n    setTimeout(function () {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay)\n  })\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","values","target","elements","amount","parseInt","value","delay1","step","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.07e128e8.js.map"}